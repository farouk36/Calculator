{"ast":null,"code":"import handleSingleOperation from \"./handleSingleOperation\";\nimport handleOperator from \"./handleOperator\";\nimport handleEquals from \"./handleEquals\";\nimport handleDelete from \"./handleDelete\";\nconst handleClick = (button, display, setDisplay, currentNumber, setCurrentNumber, expression, setExpression, isResultDisplayed, setIsResultDisplayed) => {\n  if (button === \"C\" || button === \"CE\") {\n    setDisplay(\"\");\n    setCurrentNumber(\"\");\n    setExpression(\"\");\n    setIsResultDisplayed(false);\n  } else if (button === \"⌫\") {\n    handleDelete(currentNumber, setCurrentNumber, display, setDisplay, expression, setExpression, isResultDisplayed);\n  } else if (button === \"+/-\") {\n    setIsResultDisplayed(false);\n    if (currentNumber) {\n      const toggledNumber = (parseFloat(currentNumber) * -1).toString();\n      setCurrentNumber(toggledNumber);\n      setDisplay(prevDisplay => prevDisplay.slice(0, -currentNumber.length) + toggledNumber);\n    }\n  } else if ([\"+\", \"-\", \"*\", \"/\"].includes(button)) {\n    handleOperator(button, currentNumber, setExpression, setCurrentNumber, setDisplay, setIsResultDisplayed);\n  } else if ([\"1/x\", \"x²\", \"√\", \"%\"].includes(button)) {\n    handleSingleOperation(button, currentNumber, setDisplay, setCurrentNumber, display, setIsResultDisplayed);\n  } else if (button === \"=\") {\n    handleEquals(currentNumber, expression, setDisplay, setCurrentNumber, setExpression, setIsResultDisplayed);\n  } else {\n    if (isResultDisplayed) {\n      setCurrentNumber(button);\n      setDisplay(button);\n      setExpression(\"\");\n      setIsResultDisplayed(false);\n    } else {\n      setCurrentNumber(currentNumber + button);\n      setDisplay(display + button);\n    }\n  }\n};\nexport default handleClick;","map":{"version":3,"names":["handleSingleOperation","handleOperator","handleEquals","handleDelete","handleClick","button","display","setDisplay","currentNumber","setCurrentNumber","expression","setExpression","isResultDisplayed","setIsResultDisplayed","toggledNumber","parseFloat","toString","prevDisplay","slice","length","includes"],"sources":["/media/dell/30D63D38D63CFFA0/Farouk/YEAR 2/First Term/Programming 2/lab 2/Calculator/FrontEnd/src/Calculator/Functions/handleClick.js"],"sourcesContent":["import handleSingleOperation from \"./handleSingleOperation\";\r\nimport handleOperator from \"./handleOperator\";\r\nimport handleEquals from \"./handleEquals\";\r\nimport handleDelete from \"./handleDelete\";\r\n\r\nconst handleClick = (button, display, setDisplay, currentNumber, setCurrentNumber, expression, setExpression,isResultDisplayed, setIsResultDisplayed) => {\r\n  if (button === \"C\" || button === \"CE\") {\r\n    setDisplay(\"\");\r\n    setCurrentNumber(\"\");\r\n    setExpression(\"\");\r\n    setIsResultDisplayed(false);\r\n  } else if (button === \"⌫\") {\r\n    handleDelete(currentNumber, setCurrentNumber, display, setDisplay, expression, setExpression,isResultDisplayed);\r\n  } else if (button === \"+/-\") {\r\n    setIsResultDisplayed(false);\r\n    if (currentNumber) {\r\n      const toggledNumber = (parseFloat(currentNumber) * -1).toString();\r\n      setCurrentNumber(toggledNumber);\r\n      setDisplay((prevDisplay) =>\r\n        prevDisplay.slice(0, -currentNumber.length) + toggledNumber\r\n      );\r\n    }\r\n  } else if ([\"+\", \"-\", \"*\", \"/\"].includes(button)) {\r\n    handleOperator(button, currentNumber, setExpression, setCurrentNumber, setDisplay,setIsResultDisplayed);\r\n  } else if ([\"1/x\", \"x²\", \"√\", \"%\"].includes(button)) {\r\n    handleSingleOperation(button, currentNumber, setDisplay, setCurrentNumber, display,setIsResultDisplayed);\r\n  } else if (button === \"=\") {\r\n    handleEquals(currentNumber, expression, setDisplay, setCurrentNumber, setExpression,setIsResultDisplayed);\r\n  } else {\r\n    if(isResultDisplayed){\r\n      setCurrentNumber(button);\r\n      setDisplay(button);\r\n      setExpression(\"\");\r\n      setIsResultDisplayed(false);\r\n\r\n    }else{\r\n      setCurrentNumber(currentNumber + button);\r\n    setDisplay(display + button);\r\n    }\r\n    \r\n  }\r\n};\r\n\r\nexport default handleClick;\r\n"],"mappings":"AAAA,OAAOA,qBAAqB,MAAM,yBAAyB;AAC3D,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,MAAMC,WAAW,GAAGA,CAACC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,aAAa,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,aAAa,EAACC,iBAAiB,EAAEC,oBAAoB,KAAK;EACvJ,IAAIR,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,IAAI,EAAE;IACrCE,UAAU,CAAC,EAAE,CAAC;IACdE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,aAAa,CAAC,EAAE,CAAC;IACjBE,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC,MAAM,IAAIR,MAAM,KAAK,GAAG,EAAE;IACzBF,YAAY,CAACK,aAAa,EAAEC,gBAAgB,EAAEH,OAAO,EAAEC,UAAU,EAAEG,UAAU,EAAEC,aAAa,EAACC,iBAAiB,CAAC;EACjH,CAAC,MAAM,IAAIP,MAAM,KAAK,KAAK,EAAE;IAC3BQ,oBAAoB,CAAC,KAAK,CAAC;IAC3B,IAAIL,aAAa,EAAE;MACjB,MAAMM,aAAa,GAAG,CAACC,UAAU,CAACP,aAAa,CAAC,GAAG,CAAC,CAAC,EAAEQ,QAAQ,CAAC,CAAC;MACjEP,gBAAgB,CAACK,aAAa,CAAC;MAC/BP,UAAU,CAAEU,WAAW,IACrBA,WAAW,CAACC,KAAK,CAAC,CAAC,EAAE,CAACV,aAAa,CAACW,MAAM,CAAC,GAAGL,aAChD,CAAC;IACH;EACF,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACM,QAAQ,CAACf,MAAM,CAAC,EAAE;IAChDJ,cAAc,CAACI,MAAM,EAAEG,aAAa,EAAEG,aAAa,EAAEF,gBAAgB,EAAEF,UAAU,EAACM,oBAAoB,CAAC;EACzG,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAACO,QAAQ,CAACf,MAAM,CAAC,EAAE;IACnDL,qBAAqB,CAACK,MAAM,EAAEG,aAAa,EAAED,UAAU,EAAEE,gBAAgB,EAAEH,OAAO,EAACO,oBAAoB,CAAC;EAC1G,CAAC,MAAM,IAAIR,MAAM,KAAK,GAAG,EAAE;IACzBH,YAAY,CAACM,aAAa,EAAEE,UAAU,EAAEH,UAAU,EAAEE,gBAAgB,EAAEE,aAAa,EAACE,oBAAoB,CAAC;EAC3G,CAAC,MAAM;IACL,IAAGD,iBAAiB,EAAC;MACnBH,gBAAgB,CAACJ,MAAM,CAAC;MACxBE,UAAU,CAACF,MAAM,CAAC;MAClBM,aAAa,CAAC,EAAE,CAAC;MACjBE,oBAAoB,CAAC,KAAK,CAAC;IAE7B,CAAC,MAAI;MACHJ,gBAAgB,CAACD,aAAa,GAAGH,MAAM,CAAC;MAC1CE,UAAU,CAACD,OAAO,GAAGD,MAAM,CAAC;IAC5B;EAEF;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}