{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Calculator\\\\src\\\\Calculator\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Calculator.css\"; // Include basic styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttons = ['%', 'CE', 'C', 'del', '1/x', 'x^2', '√x', '/', '7', '8', '9', '*', '4', '5', '6', '-', '1', '2', '3', '+', '+/-', '0', '.', '='];\nexport default function Calculator() {\n  _s();\n  const [display, setDisplay] = useState(\"\");\n  const handleButtonClick = async button => {\n    // Check if it's a number or operator and update display\n    if (button === \"=\") {\n      try {\n        const response = await fetch(\"http://localhost:8080/calculate\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            expression: display\n          })\n        });\n        const data = await response.json();\n        setDisplay(data.result);\n      } catch (error) {\n        console.error(\"Calculation error:\", error);\n      }\n    } else if (button === \"C\") {\n      setDisplay(\"\");\n    } else {\n      setDisplay(prev => prev + button);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map(button => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(button),\n        children: button\n      }, button, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Calculator, \"3ayO6qsu05Ea/idyt2/wbUh1H3s=\");\n_c = Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","buttons","Calculator","_s","display","setDisplay","handleButtonClick","button","response","fetch","method","headers","body","JSON","stringify","expression","data","json","result","error","console","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/Calculator/src/Calculator/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Calculator.css\"; // Include basic styling\r\n\r\nconst buttons = ['%', 'CE', 'C', 'del', '1/x', 'x^2', '√x', '/', '7', '8', '9', '*', '4', '5', '6', '-', '1', '2', '3', '+', '+/-', '0', '.', '='];\r\n\r\nexport default function Calculator() {\r\n  const [display, setDisplay] = useState(\"\");\r\n\r\n  const handleButtonClick = async (button) => {\r\n    // Check if it's a number or operator and update display\r\n    if (button === \"=\") {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/calculate\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ expression: display })\r\n        });\r\n        const data = await response.json();\r\n        setDisplay(data.result);\r\n      } catch (error) {\r\n        console.error(\"Calculation error:\", error);\r\n      }\r\n    } else if (button === \"C\") {\r\n      setDisplay(\"\");\r\n    } else {\r\n      setDisplay((prev) => prev + button);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <div className=\"display\">{display}</div>\r\n      <div className=\"buttons\">\r\n        {buttons.map((button) => (\r\n          <button key={button} onClick={() => handleButtonClick(button)}>\r\n            {button}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAElJ,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,iBAAiB,GAAG,MAAOC,MAAM,IAAK;IAC1C;IACA,IAAIA,MAAM,KAAK,GAAG,EAAE;MAClB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UAC9DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,UAAU,EAAEX;UAAQ,CAAC;QAC9C,CAAC,CAAC;QACF,MAAMY,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCZ,UAAU,CAACW,IAAI,CAACE,MAAM,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC,MAAM,IAAIZ,MAAM,KAAK,GAAG,EAAE;MACzBF,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACLA,UAAU,CAAEgB,IAAI,IAAKA,IAAI,GAAGd,MAAM,CAAC;IACrC;EACF,CAAC;EAED,oBACEP,OAAA;IAAKsB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBvB,OAAA;MAAKsB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEnB;IAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACxC3B,OAAA;MAAKsB,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBtB,OAAO,CAAC2B,GAAG,CAAErB,MAAM,iBAClBP,OAAA;QAAqB6B,OAAO,EAAEA,CAAA,KAAMvB,iBAAiB,CAACC,MAAM,CAAE;QAAAgB,QAAA,EAC3DhB;MAAM,GADIA,MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CApCuBD,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}