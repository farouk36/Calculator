{"ast":null,"code":"import handleSingleOperation from \"./handleSingleOperation\";\nimport handleOperator from \"./handleOperator\";\nimport handleEquals from \"./handleEquals\";\nconst handleClick = (button, display, setDisplay, currentNumber, setCurrentNumber, expression, setExpression) => {\n  if (button === \"C\" || button === \"CE\") {\n    setDisplay(\"\");\n    setCurrentNumber(\"\");\n    setExpression(\"\");\n  } else if (button === \"del\") {\n    if (currentNumber !== \"\") {\n      const updatedCurrentNumber = currentNumber.slice(0, -1);\n      setCurrentNumber(updatedCurrentNumber);\n      setDisplay(prevDisplay => prevDisplay.slice(0, -1));\n    } else if (display !== \"\") {\n      const parts = display.split(/([+\\-*/])/);\n      if (parts.length > 0) {\n        let lastElement = parts.pop();\n        while (parts.length > 0 && [\"+\", \"-\", \"*\", \"/\", \"\"].includes(lastElement)) {\n          lastElement = parts.pop();\n        }\n        setCurrentNumber(lastElement || \"\");\n        const updatedExpression = parts.join(\"\");\n        setExpression(updatedExpression);\n        setDisplay(updatedExpression + (lastElement || \"\"));\n      }\n    }\n  } else if (button === \"+/-\") {\n    if (currentNumber) {\n      const toggledNumber = (parseFloat(currentNumber) * -1).toString();\n      setCurrentNumber(toggledNumber);\n      setDisplay(prevDisplay => prevDisplay.slice(0, -currentNumber.length) + toggledNumber);\n    }\n  } else if ([\"+\", \"-\", \"*\", \"/\"].includes(button)) {\n    handleOperator(button, currentNumber, setExpression, setCurrentNumber, setDisplay);\n  } else if ([\"1/x\", \"x²\", \"√\", \"%\"].includes(button)) {\n    handleSingleOperation(button, currentNumber, setDisplay, setCurrentNumber, display);\n  } else if (button === \"=\") {\n    handleEquals(currentNumber, expression, setDisplay, setCurrentNumber, setExpression);\n  } else {\n    setCurrentNumber(currentNumber + button);\n    setDisplay(display + button);\n  }\n};\nexport default handleClick;","map":{"version":3,"names":["handleSingleOperation","handleOperator","handleEquals","handleClick","button","display","setDisplay","currentNumber","setCurrentNumber","expression","setExpression","updatedCurrentNumber","slice","prevDisplay","parts","split","length","lastElement","pop","includes","updatedExpression","join","toggledNumber","parseFloat","toString"],"sources":["D:/YEAR 2/Programming 2/lab 2/Calculator/FrontEnd/src/Calculator/Functions/handleClick.js"],"sourcesContent":["import handleSingleOperation from \"./handleSingleOperation\";\r\nimport handleOperator from \"./handleOperator\";\r\nimport handleEquals from \"./handleEquals\";\r\n\r\nconst handleClick = (button, display, setDisplay, currentNumber, setCurrentNumber, expression, setExpression) => {\r\n  if (button === \"C\" || button === \"CE\") {\r\n    setDisplay(\"\");\r\n    setCurrentNumber(\"\");\r\n    setExpression(\"\");\r\n  } else if (button === \"del\") {\r\n    if (currentNumber !== \"\") {\r\n      const updatedCurrentNumber = currentNumber.slice(0, -1);\r\n      setCurrentNumber(updatedCurrentNumber);\r\n      setDisplay((prevDisplay) => prevDisplay.slice(0, -1));\r\n    } else if (display !== \"\") {\r\n      const parts = display.split(/([+\\-*/])/);\r\n      if (parts.length > 0) {\r\n        let lastElement = parts.pop();\r\n        while (parts.length > 0 && [\"+\", \"-\", \"*\", \"/\", \"\"].includes(lastElement)) {\r\n          lastElement = parts.pop();\r\n        }\r\n        setCurrentNumber(lastElement || \"\");\r\n        const updatedExpression = parts.join(\"\");\r\n        setExpression(updatedExpression);\r\n        setDisplay(updatedExpression + (lastElement || \"\"));\r\n      }\r\n    }\r\n  } else if (button === \"+/-\") {\r\n    if (currentNumber) {\r\n      const toggledNumber = (parseFloat(currentNumber) * -1).toString();\r\n      setCurrentNumber(toggledNumber);\r\n      setDisplay((prevDisplay) =>\r\n        prevDisplay.slice(0, -currentNumber.length) + toggledNumber\r\n      );\r\n    }\r\n  } else if ([\"+\", \"-\", \"*\", \"/\"].includes(button)) {\r\n    handleOperator(button, currentNumber, setExpression, setCurrentNumber, setDisplay);\r\n  } else if ([\"1/x\", \"x²\", \"√\", \"%\"].includes(button)) {\r\n    handleSingleOperation(button, currentNumber, setDisplay, setCurrentNumber, display);\r\n  } else if (button === \"=\") {\r\n    handleEquals(currentNumber, expression, setDisplay, setCurrentNumber, setExpression);\r\n  } else {\r\n    setCurrentNumber(currentNumber + button);\r\n    setDisplay(display + button);\r\n  }\r\n};\r\n\r\nexport default handleClick;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}