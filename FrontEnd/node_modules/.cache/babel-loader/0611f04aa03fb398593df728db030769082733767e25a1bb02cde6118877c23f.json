{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Calculator\\\\src\\\\Calculator\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttons = ['%', 'CE', 'C', 'del', '1/x', 'x²', '√', '/', '7', '8', '9', '*', '4', '5', '6', '-', '1', '2', '3', '+', '+/-', '0', '.', '='];\nconst symbols = [\"+\", \"-\", \"*\", \"/\", \"%\"];\nexport default function Calculator() {\n  _s();\n  const [display, setDisplay] = useState(\"\");\n  const handleX = (button, power) => {\n    if (display.length == 0) return;\n    const parts = display.split(/([\\+\\-\\*\\/])/).filter(Boolean);\n    const lastPart = parts[parts.length - 1].trim();\n    if (lastPart.startsWith('(') && lastPart.endsWith(')')) {\n      if (button === \"1/x\") {\n        const updatedDisplay = display.slice(0, display.length - lastPart.length) + `(1/${lastPart}))`;\n        setDisplay(updatedDisplay);\n      } else {\n        const updatedDisplay = display.slice(0, display.length - lastPart.length) + `(${lastPart}^(${power}))`;\n        setDisplay(updatedDisplay);\n      }\n    } else if (!isNaN(lastPart)) {\n      if (button === \"1/x\") {\n        const updatedDisplay = display.slice(0, display.length - lastPart.length) + `(1/${lastPart}))`;\n        setDisplay(updatedDisplay);\n      } else {\n        const updatedDisplay = display.slice(0, display.length - lastPart.length) + `(${lastPart}^(${power}))`;\n        setDisplay(updatedDisplay);\n      }\n    }\n  };\n  const handleClick = button => {\n    if (button === \"=\") {\n      ;\n      //     evaluate();\n    } else if (button === \"C\" || button === \"CE\") {\n      setDisplay(\"\");\n    } else if (button === \"del\") {\n      setDisplay(display.slice(0, -1));\n    } else if (button === \"+/-\") {\n      const lastNumberMatch = display.match(/-?\\d+\\.?\\d*$/);\n      if (lastNumberMatch) {\n        const lastNumber = lastNumberMatch[0];\n        const newLastNumber = (parseFloat(lastNumber) * -1).toString();\n        const newDisplay = display.slice(0, -lastNumber.length) + newLastNumber;\n        setDisplay(newDisplay);\n      }\n    } else if (symbols.includes(button)) {\n      if (!symbols.includes(display.slice(-1))) {\n        setDisplay(display + button);\n      }\n    } else if (button === \"1/x\") {\n      handleX(\"1/x\" - 1);\n    } else if (button === \"x²\") {\n      handleX(2);\n    } else if (button === \"√\") {\n      handleX(1 / 2);\n    } else {\n      setDisplay(display + button);\n    }\n  };\n\n  // const evaluate = async () => {\n  //   try {\n  //     const response = await fetch(\"http://localhost:8080/api/calculate\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\"\n  //       },\n  //       body: JSON.stringify({ expression: display })\n  //     });\n  //     const result = await response.json();\n  //     setDisplay(result.result);\n  //   } catch (error) {\n  //     console.error(\"Error evaluating the expression:\", error);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map(button => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(button),\n        children: button\n      }, button, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Calculator, \"3ayO6qsu05Ea/idyt2/wbUh1H3s=\");\n_c = Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","buttons","symbols","Calculator","_s","display","setDisplay","handleX","button","power","length","parts","split","filter","Boolean","lastPart","trim","startsWith","endsWith","updatedDisplay","slice","isNaN","handleClick","lastNumberMatch","match","lastNumber","newLastNumber","parseFloat","toString","newDisplay","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/Calculator/src/Calculator/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst buttons = [\r\n  '%', 'CE', 'C', 'del',\r\n  '1/x', 'x²', '√', '/',\r\n  '7', '8', '9', '*',\r\n  '4', '5', '6', '-',\r\n  '1', '2', '3', '+',\r\n  '+/-', '0', '.', '='\r\n];\r\nconst symbols = [\"+\", \"-\", \"*\", \"/\", \"%\"];\r\n\r\nexport default function Calculator() {\r\n  const [display, setDisplay] = useState(\"\");\r\n  const handleX = (button,power) => {\r\n    if(display.length==0)return;\r\n    const parts = display.split(/([\\+\\-\\*\\/])/).filter(Boolean);\r\n    const lastPart = parts[parts.length - 1].trim();\r\n\r\n     if (lastPart.startsWith('(') && lastPart.endsWith(')')) {\r\n      if(button===\"1/x\"){\r\n        const updatedDisplay = display.slice(0, display.length - lastPart.length) + `(1/${lastPart}))`;\r\n        setDisplay(updatedDisplay);}\r\n\r\n      \r\n       \r\n        else { const updatedDisplay = display.slice(0, display.length - lastPart.length) + `(${lastPart}^(${power}))`;\r\n        setDisplay(updatedDisplay);\r\n     }} else if (!isNaN(lastPart)) {\r\n      if(button===\"1/x\"){\r\n        const updatedDisplay = display.slice(0, display.length - lastPart.length) + `(1/${lastPart}))`;\r\n        setDisplay(updatedDisplay);}\r\n\r\n      \r\n       \r\n        else { const updatedDisplay = display.slice(0, display.length - lastPart.length) + `(${lastPart}^(${power}))`;\r\n        setDisplay(updatedDisplay);\r\n     }\r\n    }\r\n};\r\n\r\n  \r\n\r\n  const handleClick = (button) => {\r\n    if (button === \"=\") {\r\n      ;\r\n      //     evaluate();\r\n    } else if (button === \"C\" || button === \"CE\") {\r\n      setDisplay(\"\");\r\n    } else if (button === \"del\") {\r\n      setDisplay(display.slice(0, -1));\r\n    } else if (button === \"+/-\") {\r\n      const lastNumberMatch = display.match(/-?\\d+\\.?\\d*$/);\r\n\r\n      if (lastNumberMatch) {\r\n        const lastNumber = lastNumberMatch[0];\r\n        const newLastNumber = (parseFloat(lastNumber) * -1).toString();\r\n\r\n\r\n        const newDisplay = display.slice(0, -lastNumber.length) + newLastNumber;\r\n        setDisplay(newDisplay);\r\n      }\r\n    } else if (symbols.includes(button)) {\r\n\r\n      if (!symbols.includes(display.slice(-1))) {\r\n        setDisplay(display + button);\r\n      }\r\n    }\r\n    else if (button === \"1/x\") {\r\n      handleX(\"1/x\"-1);\r\n\r\n    }else if(button === \"x²\"){\r\n      handleX(2);\r\n\r\n    }else if(button === \"√\"){\r\n      handleX(1/2);\r\n\r\n    }  else {\r\n      setDisplay(display + button);\r\n    }\r\n  };\r\n\r\n  // const evaluate = async () => {\r\n  //   try {\r\n  //     const response = await fetch(\"http://localhost:8080/api/calculate\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\"\r\n  //       },\r\n  //       body: JSON.stringify({ expression: display })\r\n  //     });\r\n  //     const result = await response.json();\r\n  //     setDisplay(result.result);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error evaluating the expression:\", error);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <div className=\"display\">{display}</div>\r\n      <div className=\"buttons\">\r\n        {buttons.map((button) => (\r\n          <button key={button} onClick={() => handleClick(button)}>\r\n            {button}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}