{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Calculator\\\\src\\\\Calculator\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttons = ['%', 'CE', 'C', 'del', '1/x', 'x²', '√', '/', '7', '8', '9', '*', '4', '5', '6', '-', '1', '2', '3', '+', '+/-', '0', '.', '='];\nexport default function Calculator() {\n  _s();\n  const [display, setDisplay] = useState(\"\");\n  const [currentNumber, setCurrentNumber] = useState(\"\");\n  const [expression, setExpression] = useState(\"\");\n  const handleSingleOperation = operation => {\n    let result;\n    const number = parseFloat(currentNumber);\n    if (isNaN(number)) return;\n    switch (operation) {\n      case \"1/x\":\n        result = 1 / number;\n        break;\n      case \"x²\":\n        result = number ** 2;\n        break;\n      case \"√\":\n        result = Math.sqrt(number);\n        break;\n      case \"%\":\n        result = number / 100;\n        break;\n      default:\n        return;\n    }\n    setCurrentNumber(result);\n    const updatedDisplay = display.replace(currentNumber, result);\n    setDisplay(updatedDisplay);\n  };\n  const handleOperator = operator => {\n    if (currentNumber === \"\") return;\n    setExpression(prev => prev + currentNumber + operator); // No spaces added\n    setCurrentNumber(\"\");\n    setDisplay(prevDisplay => prevDisplay + ` ${operator} `);\n  };\n  const handleEquals = async () => {\n    if (currentNumber === \"\" && expression === \"\") return;\n    const fullExpression = expression + currentNumber;\n    console.log(fullExpression);\n    try {\n      const response = await fetch(`http://localhost:8080/calculate/api?expression=${encodeURIComponent(fullExpression)}`);\n      const result = await response.text();\n      setDisplay(result);\n      setCurrentNumber(result);\n      setExpression(\"\");\n    } catch (error) {\n      console.error(error);\n      setDisplay(\"Error\");\n    }\n  };\n  const handleClick = button => {\n    if (button === \"C\" || button === \"CE\") {\n      setDisplay(\"\");\n      setCurrentNumber(\"\");\n      setExpression(\"\");\n    } else if (button === \"del\") {\n      setCurrentNumber(currentNumber.slice(0, -1));\n      setDisplay(display.slice(0, -1));\n    } else if (button === \"+/-\") {\n      if (currentNumber) {\n        const toggledNumber = (parseFloat(currentNumber) * -1).toString();\n        setCurrentNumber(toggledNumber);\n        setDisplay(prevDisplay => prevDisplay.slice(0, -currentNumber.length) + toggledNumber);\n      }\n    } else if ([\"+\", \"-\", \"*\", \"/\"].includes(button)) {\n      handleOperator(button);\n    } else if (button === \"1/x\" || button === \"x²\" || button === \"√\" || button === \"%\") {\n      handleSingleOperation(button);\n    } else if (button === \"=\") {\n      handleEquals();\n    } else {\n      setCurrentNumber(currentNumber + button);\n      setDisplay(display + button);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: buttons.map(button => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(button),\n        children: button\n      }, button, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Calculator, \"2hi1RKYkGHXuTrvdmRZ9qjTYzY8=\");\n_c = Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","buttons","Calculator","_s","display","setDisplay","currentNumber","setCurrentNumber","expression","setExpression","handleSingleOperation","operation","result","number","parseFloat","isNaN","Math","sqrt","updatedDisplay","replace","handleOperator","operator","prev","prevDisplay","handleEquals","fullExpression","console","log","response","fetch","encodeURIComponent","text","error","handleClick","button","slice","toggledNumber","toString","length","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/Calculator/src/Calculator/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst buttons = [\r\n  '%', 'CE', 'C', 'del',\r\n  '1/x', 'x²', '√', '/',\r\n  '7', '8', '9', '*',\r\n  '4', '5', '6', '-',\r\n  '1', '2', '3', '+',\r\n  '+/-', '0', '.', '='\r\n];\r\n\r\nexport default function Calculator() {\r\n  const [display, setDisplay] = useState(\"\");\r\n  const [currentNumber, setCurrentNumber] = useState(\"\");\r\n  const [expression, setExpression] = useState(\"\"); \r\n\r\n  const handleSingleOperation = (operation) => {\r\n    let result;\r\n    const number = parseFloat(currentNumber);\r\n\r\n    if (isNaN(number)) return;\r\n\r\n    switch (operation) {\r\n      case \"1/x\":\r\n        result = 1 / number;\r\n        break;\r\n      case \"x²\":\r\n        result = number ** 2;\r\n        break;\r\n      case \"√\":\r\n        result = Math.sqrt(number);\r\n        break;\r\n      case \"%\":\r\n        result = number / 100;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    setCurrentNumber(result);\r\n    const updatedDisplay = display.replace(currentNumber, result);\r\n    setDisplay(updatedDisplay);\r\n  };\r\n\r\n  const handleOperator = (operator) => {\r\n    if (currentNumber === \"\") return;\r\n\r\n    setExpression((prev) => prev + currentNumber + operator); // No spaces added\r\n    setCurrentNumber(\"\");\r\n    setDisplay((prevDisplay) => prevDisplay + ` ${operator} `);\r\n  };\r\n\r\n  const handleEquals = async () => {\r\n    if (currentNumber === \"\" && expression === \"\") return;\r\n\r\n    const fullExpression = expression + currentNumber;\r\n    console.log(fullExpression);\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/calculate/api?expression=${encodeURIComponent(fullExpression)}`);\r\n      const result = await response.text();\r\n      setDisplay(result);\r\n      setCurrentNumber(result);\r\n      setExpression(\"\");\r\n    } catch (error) {\r\n      console.error( error);\r\n      setDisplay(\"Error\");\r\n    }\r\n  };\r\n\r\n  const handleClick = (button) => {\r\n    if (button === \"C\" || button === \"CE\") {\r\n      setDisplay(\"\");\r\n      setCurrentNumber(\"\");\r\n      setExpression(\"\");\r\n    } else if (button === \"del\") {\r\n      setCurrentNumber(currentNumber.slice(0, -1));\r\n      setDisplay(display.slice(0, -1));\r\n    } else if (button === \"+/-\") {\r\n      if (currentNumber) {\r\n        const toggledNumber = (parseFloat(currentNumber) * -1).toString();\r\n        setCurrentNumber(toggledNumber);\r\n        setDisplay((prevDisplay) =>\r\n          prevDisplay.slice(0, -currentNumber.length) + toggledNumber\r\n        );\r\n      }\r\n    } else if ([\"+\", \"-\", \"*\", \"/\"].includes(button)) {\r\n      handleOperator(button);\r\n    } else if (button === \"1/x\" || button === \"x²\" || button === \"√\" || button === \"%\") {\r\n      handleSingleOperation(button);\r\n    } else if (button === \"=\") {\r\n      handleEquals();\r\n    } else {\r\n      setCurrentNumber(currentNumber + button);\r\n      setDisplay(display + button);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <div className=\"display\">{display}</div>\r\n      <div className=\"buttons\">\r\n        {buttons.map((button) => (\r\n          <button key={button} onClick={() => handleClick(button)}>\r\n            {button}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}