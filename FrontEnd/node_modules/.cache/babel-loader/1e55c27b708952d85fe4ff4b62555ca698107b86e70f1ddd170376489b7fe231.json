{"ast":null,"code":"const handleSingleOperation = async (operation, currentNumber, setDisplay, setCurrentNumber, display, setIsResultDisplayed) => {\n  const number = parseFloat(currentNumber);\n  console.log(number);\n  if (isNaN(number)) return;\n  try {\n    const response = await fetch(`http://localhost:8080/calculate/single-operation?operation=${encodeURIComponent(operation)}&number=${number}`);\n    const result = await response.text();\n    if (result.startsWith(\"Error\")) {\n      setDisplay(result);\n      setIsResultDisplayed(true);\n      return;\n    }\n    const formattedResult = parseFloat(result) % 1 === 0 ? parseInt(result).toString() : result;\n    setCurrentNumber(formattedResult);\n    const updatedDisplay = display.slice(0, -currentNumber.length) + `${formattedResult}`;\n    setDisplay(updatedDisplay);\n  } catch (error) {\n    setIsResultDisplayed(true);\n    console.error(\"Error:\", error);\n    setDisplay(\"Error\");\n  }\n};\nexport default handleSingleOperation;","map":{"version":3,"names":["handleSingleOperation","operation","currentNumber","setDisplay","setCurrentNumber","display","setIsResultDisplayed","number","parseFloat","console","log","isNaN","response","fetch","encodeURIComponent","result","text","startsWith","formattedResult","parseInt","toString","updatedDisplay","slice","length","error"],"sources":["D:/Farouk/YEAR 2/First Term/Programming 2/lab 2/Calculator/FrontEnd/src/Calculator/Functions/handleSingleOperation.js"],"sourcesContent":["const handleSingleOperation = async (operation, currentNumber, setDisplay, setCurrentNumber, display, setIsResultDisplayed) => {\r\n  const number = parseFloat(currentNumber);\r\n  console.log(number)\r\n  if (isNaN(number)) return;\r\n  try {\r\n    const response = await fetch(`http://localhost:8080/calculate/single-operation?operation=${encodeURIComponent(operation)}&number=${number}`);\r\n    const result = await response.text();\r\n\r\n    if (result.startsWith(\"Error\")) {\r\n      setDisplay(result);\r\n      setIsResultDisplayed(true);\r\n      return;\r\n    }\r\n\r\n\r\n    const formattedResult = parseFloat(result) % 1 === 0 ? parseInt(result).toString() : result;\r\n\r\n    setCurrentNumber(formattedResult);\r\n    const updatedDisplay = display.slice(0, -currentNumber.length) + `${formattedResult}`;\r\n    setDisplay(updatedDisplay);\r\n  } catch (error) {\r\n    setIsResultDisplayed(true);\r\n    console.error(\"Error:\", error);\r\n    setDisplay(\"Error\");\r\n  }\r\n};\r\n\r\nexport default handleSingleOperation;"],"mappings":"AAAA,MAAMA,qBAAqB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,aAAa,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,OAAO,EAAEC,oBAAoB,KAAK;EAC7H,MAAMC,MAAM,GAAGC,UAAU,CAACN,aAAa,CAAC;EACxCO,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACnB,IAAII,KAAK,CAACJ,MAAM,CAAC,EAAE;EACnB,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAA8DC,kBAAkB,CAACb,SAAS,CAAC,WAAWM,MAAM,EAAE,CAAC;IAC5I,MAAMQ,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAEpC,IAAID,MAAM,CAACE,UAAU,CAAC,OAAO,CAAC,EAAE;MAC9Bd,UAAU,CAACY,MAAM,CAAC;MAClBT,oBAAoB,CAAC,IAAI,CAAC;MAC1B;IACF;IAGA,MAAMY,eAAe,GAAGV,UAAU,CAACO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAGI,QAAQ,CAACJ,MAAM,CAAC,CAACK,QAAQ,CAAC,CAAC,GAAGL,MAAM;IAE3FX,gBAAgB,CAACc,eAAe,CAAC;IACjC,MAAMG,cAAc,GAAGhB,OAAO,CAACiB,KAAK,CAAC,CAAC,EAAE,CAACpB,aAAa,CAACqB,MAAM,CAAC,GAAG,GAAGL,eAAe,EAAE;IACrFf,UAAU,CAACkB,cAAc,CAAC;EAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdlB,oBAAoB,CAAC,IAAI,CAAC;IAC1BG,OAAO,CAACe,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9BrB,UAAU,CAAC,OAAO,CAAC;EACrB;AACF,CAAC;AAED,eAAeH,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}